#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- name: Set common facts
  tags: [always]
  hosts: [broker, controller]
  connection: ssh
  tasks:
    - set_fact:
        # Global configs
        baseStorePath: "/mnt/data-1"
        kafka_cluster_id: "XPufKTN9T1SpE82LDKwXwA"
    - set_fact:
        kafka_dir: "{{ baseStorePath }}/kafka"


- name: Stop broker
  tags: [reset]
  hosts: broker
  connection: ssh
  become: true
  tasks:
    - name: Stop broker
      systemd:
        state: stopped
        name: "broker"
    - name: Wait broker to be stopped
      service_facts:
      register: broker_service
      until: broker_service.ansible_facts.services['broker.service'].state in ['stopped', 'inactive']
      retries: 10
      delay: 5
    - name: Remove data dir
      file:
        path: "{{ baseStorePath }}/kafka-broker"
        state: absent
    - name: Remove logs dir
      file:
        path: "{{ kafka_dir }}/logs"
        state: absent
    - name: Format Log Directories
      shell: bin/kafka-storage.sh format -t {{ kafka_cluster_id }} -c config/kraft/broker.properties --ignore-formatted
      args:
        chdir: "{{ kafka_dir }}"

- name: Stop controller
  tags: [stop]
  hosts: controller
  connection: ssh
  become: true
  tasks:
    - name: Stop controller
      systemd:
        state: stopped
        name: "controller"
    - name: Wait controller to be stopped
      service_facts:
      register: controller_service
      until: controller_service.ansible_facts.services['controller.service'].state in ['stopped', 'inactive']
      retries: 10
      delay: 5
    - name: Remove data dir
      file:
        path: "{{ baseStorePath }}/kafka-controller"
        state: absent
    - name: Remove logs dir
      file:
        path: "{{ kafka_dir }}/logs"
        state: absent
    - name: Format Log Directories
      shell: bin/kafka-storage.sh format -t {{ kafka_cluster_id }} -c config/kraft/controller.properties --ignore-formatted
      args:
        chdir: "{{ kafka_dir }}"

- name: Stop Data Node
  tags: [reset]
  hosts: data_node
  connection: ssh
  become: true
  tasks:
    - name: Stop Data Node
      systemd:
        state: stopped
        name: "data-node"
    - name: Wait Data Node to be stopped
      service_facts:
      register: data_node_service
      until: data_node_service.ansible_facts.services['data-node.service'].state in ['stopped', 'inactive']
      retries: 10
      delay: 5
    - name: Remove data dir
      file:
        path: /mnt/data-1/data-node
        state: absent

- name: Stop Placement Driver
  tags: [stop]
  hosts: placement_driver
  connection: ssh
  become: true
  tasks:
    - name: Stop Placement Driver
      systemd:
        state: stopped
        name: "placement-dirver"
    - name: Wait Placement Driver to be stopped
      service_facts:
      register: placement_driver_service
      until: placement_driver_service.ansible_facts.services['placement-dirver.service'].state in ['stopped', 'inactive']
      retries: 10
      delay: 5
    - name: Remove data dir
      file:
        path: /mnt/data-1/placement-dirver
        state: absent

- name: Start Placement Driver
  tags: [run]
  hosts: [placement_driver]
  connection: ssh
  become: true
  tasks:
    - name: Start Placement Driver
      systemd:
          state: restarted
          daemon_reload: yes
          name: "placement-dirver"

- name: Start data node
  tags: [run]
  hosts: [data_node]
  connection: ssh
  become: true
  tasks:
    - name: Start data node
      systemd:
          state: restarted
          daemon_reload: yes
          name: "data-node"

- name: Start Kafka controller
  tags: [run]
  hosts: [controller]
  connection: ssh
  become: true
  tasks:
    - name: Start Kafka controller
      systemd:
        state: restarted
        daemon_reload: yes
        name: "controller"

- name: Start Kafka brokers
  tags: [run]
  hosts: [broker]
  connection: ssh
  become: true
  tasks:
    - name: Start Kafka broker
      systemd:
        state: restarted
        daemon_reload: yes
        name: "broker"
