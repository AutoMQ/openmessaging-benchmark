#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# This configuration file is intended for use in KRaft mode, where
# Apache ZooKeeper is not present.  See config/kraft/README.md for details.
#

############################# Server Basics #############################

# The role of this server. Setting this puts us in KRaft mode
process.roles={{ process_roles }}

# The node id associated with this instance's roles
node.id={{ node_id }}

# The connect string for the controller quorum
controller.quorum.voters={{ quorum_servers }}

############################# Socket Server Settings #############################

# The address the socket server listens on.
# Combined nodes (i.e. those with `process.roles=broker,controller`) must list the controller listener here at a minimum.
# If the broker listener is not defined, the default listener will use a host name that is equal to the value of java.net.InetAddress.getCanonicalHostName(),
# with PLAINTEXT listener name, and port 9092.
#   FORMAT:
#     listeners = listener_name://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
listeners={{ listeners }}

# Name of listener used for communication between brokers.
inter.broker.listener.name=PLAINTEXT

# Listener name, hostname and port the broker will advertise to clients.
# If not set, it uses the value for "listeners".
advertised.listeners=PLAINTEXT://{{ private_ip }}:9092,BROKER_SASL://{{ private_ip }}:9102,BROKER_SASL_SSL://{{ private_ip }}:9112,BROKER_MTLS://{{ private_ip }}:9122

# A comma-separated list of the names of the listeners used by the controller.
# If no explicit mapping set in `listener.security.protocol.map`, default will be using PLAINTEXT protocol
# This is required if running in KRaft mode.
controller.listener.names=CONTROLLER

# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL,BROKER_SASL:SASL_PLAINTEXT,BROKER_MTLS:SSL,BROKER_SASL_SSL:SASL_SSL

# The number of threads that the server uses for receiving requests from the network and sending responses to the network
num.network.threads=16

# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=16

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600

sasl.enabled.mechanisms=PLAIN
listener.name.broker_sasl.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin" user_admin="admin";
listener.name.broker_sasl_ssl.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin" user_admin="admin";
super.users=User:admin

listener.name.broker_mtls.ssl.client.auth=required
ssl.keystore.certificate.chain=-----BEGIN CERTIFICATE----- \
  MIICzjCCAbagAwIBAgIIJHd3L09Wn4swDQYJKoZIhvcNAQELBQAwJzESMBAGA1UE \
  AwwJbG9jYWxob3N0MREwDwYDVQQKDAhBIHNlcnZlcjAeFw0yNTAyMTkwMjQ3Mjha \
  Fw0zNTAyMTcwMjQ3MjhaMCcxEjAQBgNVBAMMCWxvY2FsaG9zdDERMA8GA1UECgwI \
  QSBzZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwcoQdYtby \
  /RvPPWeYs/i8C7V/rA+/tPzI684LOoYeVSr1+5KqAPX3j2lVt6YpE5pqQcawVczN \
  3cL/FhOIgZjkuMItG8xGn9RDN7FOXcbotLvbizxSR1CLIPFGT7dYgn7OqhA9SIEr \
  Fp1bK4haA0XcF8KyX2bXkZ03GIkpl91qRvy5bIk24igOIkuLU2fo2/xlMqB2ULc1 \
  yllQ6JaSmNPs5cvNVjY9SZ9TB7ghwiyBmFTxBrpuvrvtDjRruTjos/7BzKa3qRWx \
  nK4qR2IzmPdceEtkMPx5WEiZbICQ02XoJ/SGzLSmMEuoY1OD0Pdr4/s2r+a53Coc \
  1U6uoQmPemr9AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGtjG0Ob91VmX+u+LitL \
  71ZLixPW8Tm6mSOHIFvwUdVzOuG3eGOFyISm+IbTn3YI/3h7AHZlCFyJhq86Gtos \
  YtWf7BklGtPv5drnbXfkkXUi0qUOrCHSl12eNGTIiX8DuAejm7JRwp70jNJAq18s \
  6F7xK3xILQbQY7Ds6/JrVuhIu4miGAB83Ch0//dODu8AriYrZAzY2SlcyI68glX3 \
  PF/BICEW70lA5IyHZNSfpINQwdJVrPEhVSHtqnwIoF/pb9swsEQDGF1paCJZm/Zk \
  J3SrDw17Z5/fBhiMRAXstoOr1eWtQlvg8IqkKJlWoziAaBplZ+Mz/dH2PYmlnXB5 \
  b0M= \
  -----END CERTIFICATE-----
ssl.keystore.key=-----BEGIN PRIVATE KEY----- \
  MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCwcoQdYtby/RvP \
  PWeYs/i8C7V/rA+/tPzI684LOoYeVSr1+5KqAPX3j2lVt6YpE5pqQcawVczN3cL/ \
  FhOIgZjkuMItG8xGn9RDN7FOXcbotLvbizxSR1CLIPFGT7dYgn7OqhA9SIErFp1b \
  K4haA0XcF8KyX2bXkZ03GIkpl91qRvy5bIk24igOIkuLU2fo2/xlMqB2ULc1yllQ \
  6JaSmNPs5cvNVjY9SZ9TB7ghwiyBmFTxBrpuvrvtDjRruTjos/7BzKa3qRWxnK4q \
  R2IzmPdceEtkMPx5WEiZbICQ02XoJ/SGzLSmMEuoY1OD0Pdr4/s2r+a53Coc1U6u \
  oQmPemr9AgMBAAECggEAK2gMiLchNlceUYHjW51AjjAaNv2CxVA2lI3v2vLLfihJ \
  AIjiKGjCmaNh0Bi062t7Y/Lo+EWvM6C/oOWTKhRporCx8gth2ijk/KE1gNgQf/xA \
  L47l6L7K+WMB/+BJ9B/sJpaPFqhgwFMYpE5GBZDDDZUZzCwsflD/2kcyrPUDXuqN \
  lfxmlzKRgr8rpqGn6KwLwC6MngElK1qZobbsfwUToLOqe1/gM6DRZBs2oBb+T7Jg \
  uvXGLOCkw3sh4uvKOR700fbnRjk85zl42UfzVKEEPIKvUjgBdC01GpCsAn6Zwzab \
  jlaA6gnOlIjZbvbZyePxf0dSEuqAuVzNLCgdzeqVkQKBgQDPpkijb9+E+GVfIdZz \
  7r0I7lbBG1qd5w4wS4Bbb5MElk72Nj2ZVA+rrualEUY13beeKr7CtvznW0A1Hu5S \
  85VEe9PkY6XpN1ggL6tLNRSxqwyPoTGiQi+n8NG+q7gMuI0CEcdQwP2/pL/IcJaV \
  mSvhEzP/S8qX2DpvQqpJPKtzsQKBgQDZiE8nYe6bVMP4pVBnnsWHC4e295CIOFqL \
  2lru6HwbkT2IoS1prKkrbZeb7QNrBhu0U+w+CLu8EyBRgs8cnQKnsk/2A+V2dPtv \
  pIbTlYBjWJa9UsUNFPcjIR6Kkiy6PEQ/zI4nOecX8pQM1q+jXtU3qls9bdhZrrfB \
  aGDuvof7DQKBgFx8jcHt5DqPgGc85Q3B+gRuU8my60uFTDaKimMvcOYMJKNZSVpv \
  rIMlZamD5ie71zrlgw2q/z300MZYPoJH5+YW2SvSjmUvt1quoLbgr5TqwK+AdmD0 \
  5dEBXAp25YUU9glD7eiz7NFdCea27vs2u+qF6RT+pv+22WAQ61OvaBYhAoGAMlUz \
  22zxhMdsQNAfdppqIgEs+cz2iE5hxRJVEAqDDO3iSwbgNx9YVVAaUF3a+JyFNIhm \
  lUP4DGBwjeuyeHBr+NltXwMvyOTweLic6cAh4NrSpiPMrGY5eMtlAbMo3j6rnAd8 \
  rN7c9dGPKBlUsnxy4Vptmh0cfkPLCNlZ9GPpmtECgYEAm26whKWPIEfGXYnJllkU \
  5M9rpyKbrOjGexmxwHgy41ekjhzsV89fumWyd+sk/3MYUIAYaaQrZWGXWuz9PANt \
  1+GqB3uEI5yeIgFmi6PyYaFzm0caV91iopMvMbutb4I2drW8Vl+yRXzXKO2cHojP \
  qUutykYfbvWYCKIwWsDSjmw= \
  -----END PRIVATE KEY-----
ssl.keystore.type=PEM
ssl.truststore.certificates=-----BEGIN CERTIFICATE----- \
  MIICzjCCAbagAwIBAgIIJHd3L09Wn4swDQYJKoZIhvcNAQELBQAwJzESMBAGA1UE \
  AwwJbG9jYWxob3N0MREwDwYDVQQKDAhBIHNlcnZlcjAeFw0yNTAyMTkwMjQ3Mjha \
  Fw0zNTAyMTcwMjQ3MjhaMCcxEjAQBgNVBAMMCWxvY2FsaG9zdDERMA8GA1UECgwI \
  QSBzZXJ2ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwcoQdYtby \
  /RvPPWeYs/i8C7V/rA+/tPzI684LOoYeVSr1+5KqAPX3j2lVt6YpE5pqQcawVczN \
  3cL/FhOIgZjkuMItG8xGn9RDN7FOXcbotLvbizxSR1CLIPFGT7dYgn7OqhA9SIEr \
  Fp1bK4haA0XcF8KyX2bXkZ03GIkpl91qRvy5bIk24igOIkuLU2fo2/xlMqB2ULc1 \
  yllQ6JaSmNPs5cvNVjY9SZ9TB7ghwiyBmFTxBrpuvrvtDjRruTjos/7BzKa3qRWx \
  nK4qR2IzmPdceEtkMPx5WEiZbICQ02XoJ/SGzLSmMEuoY1OD0Pdr4/s2r+a53Coc \
  1U6uoQmPemr9AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGtjG0Ob91VmX+u+LitL \
  71ZLixPW8Tm6mSOHIFvwUdVzOuG3eGOFyISm+IbTn3YI/3h7AHZlCFyJhq86Gtos \
  YtWf7BklGtPv5drnbXfkkXUi0qUOrCHSl12eNGTIiX8DuAejm7JRwp70jNJAq18s \
  6F7xK3xILQbQY7Ds6/JrVuhIu4miGAB83Ch0//dODu8AriYrZAzY2SlcyI68glX3 \
  PF/BICEW70lA5IyHZNSfpINQwdJVrPEhVSHtqnwIoF/pb9swsEQDGF1paCJZm/Zk \
  J3SrDw17Z5/fBhiMRAXstoOr1eWtQlvg8IqkKJlWoziAaBplZ+Mz/dH2PYmlnXB5 \
  b0M= \
  -----END CERTIFICATE-----
ssl.truststore.type=PEM

############################# Log Basics #############################

# A comma separated list of directories under which to store log files
log.dirs={{ base_store_path }}/data

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num.partitions=1

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
num.recovery.threads.per.data.dir=1

############################# Internal Topic Settings  #############################
# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

############################# Log Flush Policy #############################

# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.

# The number of messages to accept before forcing a flush of data to disk
#log.flush.interval.messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
#log.flush.interval.ms=1000

############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion due to age
log.retention.hours=168

# A size-based retention policy for logs. Segments are pruned from the log unless the remaining
# segments drop below log.retention.bytes. Functions independently of log.retention.hours.
#log.retention.bytes=1073741824

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
log.segment.bytes=1073741824

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
log.retention.check.interval.ms=300000

############################# Settings for AutoMQ for Kafka #############################
# Whether to enable store data in elastic stream layer
elasticstream.enable=true

# The data buckets
# the full url format for s3 is 0@s3://$bucket?region=$region[&endpoint=$endpoint][&pathStyle=$enablePathStyle][&authType=$authType][&accessKey=$accessKey][&secretKey=$secretKey]"
# - pathStyle: true|false. The object storage access path style. When using MinIO, it should be set to true."
# - authType: instance|static.
#  - When set to instance, it will use instance profile to auth.
#  - When set to static, it will get accessKey and secretKey from the url or from system environment KAFKA_S3_ACCESS_KEY/KAFKA_S3_SECRET_KEY."
s3.data.buckets=0@s3://{{ s3_bucket }}?region={{ s3_region }}&endpoint={{ s3_endpoint }}
# The ops buckets
# s3.ops.buckets=0@s3://{{ s3_bucket }}?region={{ s3_region }}&endpoint={{ s3_endpoint }}

# The file path of delta WAL in block device
s3.wal.path=0@file://{{ kafka_wal_path }}?capacity=4294967296&iops={{ kafka_wal_iops }}

# The maximum size of WAL cache can use, default 2GB
s3.wal.cache.size=2147483648

# The batched size of delta WAL before being uploaded to S3, default 500MB
s3.wal.upload.threshold=536870912

# The maximum size of block cache the broker can use to cache data read from S3, default 1GB
s3.block.cache.size=1073741824

# The baseline network bandwidth of the broker in bytes/s, default 100MB/s. This is used to throttle the network usage during compaction
# and catch up read
s3.network.baseline.bandwidth={{ ec2_network_bandwidth }}

# The S3 stream memory allocator policy, supported value: POOLED_HEAP, POOLED_DIRECT, default POOLED_HEAP
s3.stream.allocator.policy=POOLED_DIRECT

############################# Settings for metrics #############################
# See kafka.automq.AutoMQConfig.S3_TELEMETRY_METRICS_EXPORTER_URI_DOC for the full format of the URI
s3.telemetry.metrics.exporter.uri=otlp://?endpoint=http://{{ telemetry_ip }}:4317&protocol=grpc
s3.telemetry.metrics.level=INFO
s3.telemetry.exporter.report.interval.ms=5000

############################# Settings for Auto Balancer #############################
# The metric reporter to collect and report metrics for Auto Balancer
metric.reporters=kafka.autobalancer.metricsreporter.AutoBalancerMetricsReporter

############################# Settings of Controller for Auto Balancer #############################
# Whether to enabled Auto Balancer in controller, default false
# autobalancer.controller.enable=false

# The topics to be excluded from balancing
#autobalancer.controller.exclude.topics=topic-a,topic-b,topic-c

# The broker ids to be excluded from balancing
#autobalancer.controller.exclude.broker.ids=0,1,2

############################# Settings for benchmark #############################

# added settings from confluent benchmark
num.replica.fetchers=8
message.max.bytes=10485760
replica.fetch.max.bytes=10485760

# added for benchmark
socket.receive.buffer.bytes=1048576
socket.send.buffer.bytes=1048576
