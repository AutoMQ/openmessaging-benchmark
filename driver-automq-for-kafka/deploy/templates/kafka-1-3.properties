#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# This configuration file is intended for use in KRaft mode, where
# Apache ZooKeeper is not present.  See config/kraft/README.md for details.
#

############################# Server Basics #############################

# The role of this server. Setting this puts us in KRaft mode
process.roles={{ process_roles }}

# The node id associated with this instance's roles
node.id={{ node_id }}

# The connect string for the controller quorum
controller.quorum.voters={{ quorum_servers }}

############################# Socket Server Settings #############################

# The address the socket server listens on.
# Combined nodes (i.e. those with `process.roles=broker,controller`) must list the controller listener here at a minimum.
# If the broker listener is not defined, the default listener will use a host name that is equal to the value of java.net.InetAddress.getCanonicalHostName(),
# with PLAINTEXT listener name, and port 9092.
#   FORMAT:
#     listeners = listener_name://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
listeners={{ listeners }}

# Name of listener used for communication between brokers.
inter.broker.listener.name=PLAINTEXT

# Listener name, hostname and port the broker will advertise to clients.
# If not set, it uses the value for "listeners".
advertised.listeners=PLAINTEXT://{{ private_ip }}:9092,BROKER_SASL://{{ private_ip }}:9102,BROKER_SASL_SSL://{{ private_ip }}:9112,BROKER_MTLS://{{ private_ip }}:9122

# A comma-separated list of the names of the listeners used by the controller.
# If no explicit mapping set in `listener.security.protocol.map`, default will be using PLAINTEXT protocol
# This is required if running in KRaft mode.
controller.listener.names=CONTROLLER

# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL,BROKER_SASL:SASL_PLAINTEXT,BROKER_MTLS:SSL,BROKER_SASL_SSL:SASL_SSL

# The number of threads that the server uses for receiving requests from the network and sending responses to the network
num.network.threads=16

# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=16

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600

sasl.enabled.mechanisms=PLAIN
listener.name.broker_sasl.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin" user_admin="admin";
listener.name.broker_sasl_ssl.plain.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin" user_admin="admin";
super.users=User:admin

listener.name.broker_mtls.ssl.client.auth=required
ssl.keystore.certificate.chain=-----BEGIN CERTIFICATE----- \
  MIICzzCCAbegAwIBAgIJAL+3xx6or1QTMA0GCSqGSIb3DQEBBQUAMCcxEjAQBgNV \
  BAMMCWxvY2FsaG9zdDERMA8GA1UECgwIQSBzZXJ2ZXIwHhcNMjUwMjE4MTAwMTU4 \
  WhcNMjUwMzIwMTAwMTU4WjAnMRIwEAYDVQQDDAlsb2NhbGhvc3QxETAPBgNVBAoM \
  CEEgc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArqSZrPC6 \
  0D09iIGqPlNl/W6u+5ATkRLFEQY+k+JG2qIGmjmGBjbsR931RUK/lI8BJZosdIBl \
  s12fxcs7oF2IrRYGNQvPBUJArVrtmt0zVeZH+4IPFMtCJ2XdH01DNEuvnBSemy6O \
  QP0wE6tewnZh59whBswMG8YOcYaTkRmKpepYzrON8NbfMCnqLefo7rLLNJmZZR82 \
  ugJg+RVTT/riSj3rYpcYPZr4TDTzBvkFD24blXHv75HLWBcOarUGMnPDcSrAZGEu \
  Gh4m/VKsgxlbG0N/5UVt4oApADvT17rzPKfZVBVVU3RiEk03cOu9bf8M9Nh5/Rzr \
  a2mF6cyuwTtOJQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCIjsPCu6HW/eH6YgNb \
  5Pmfuc5kp4R/kJQD9puE5ipuyfGZ1MoVIqVu+eD2UHkcDTuyhhrLdgHgfi2nKEf6 \
  0eDUXMMlFQPonURAZhj+74yU5vDqcHHqpZVwTIyHEifsfG+GSVDkb+C1E+ItNjxD \
  DjJN76+pPxznFi68Tg1v0/K+mzL0o0V8T79HDMk4MVxIOC3610aoBChbGaOUX8U6 \
  6mCQjwZfk6JJujunaZ8882sf+GAx+AjA1rR3dWjX6CmCjugOdpIn6bpopHpD+ruI \
  fJmhCUja0K8malu4AZvqD53yu66TXD20Q5LzHJCIGTYnbR6QaFCjsOEk+6df4H2U \
  yMKo \
  -----END CERTIFICATE-----
ssl.keystore.key=-----BEGIN PRIVATE KEY----- \
  MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCupJms8LrQPT2I \
  gao+U2X9bq77kBOREsURBj6T4kbaogaaOYYGNuxH3fVFQr+UjwElmix0gGWzXZ/F \
  yzugXYitFgY1C88FQkCtWu2a3TNV5kf7gg8Uy0InZd0fTUM0S6+cFJ6bLo5A/TAT \
  q17CdmHn3CEGzAwbxg5xhpORGYql6ljOs43w1t8wKeot5+jusss0mZllHza6AmD5 \
  FVNP+uJKPetilxg9mvhMNPMG+QUPbhuVce/vkctYFw5qtQYyc8NxKsBkYS4aHib9 \
  UqyDGVsbQ3/lRW3igCkAO9PXuvM8p9lUFVVTdGISTTdw671t/wz02Hn9HOtraYXp \
  zK7BO04lAgMBAAECggEAEZmvjh0FqrpdQu5UZqsXfnrC4kHjIu36E8zmDhfSDbMi \
  CLVu4x3yYozFLOl87r8Zvb0jqUsOVM0E7tVcST1b6purXPm3b599bqsZApAz3f6S \
  9w8kr3MLk/ZhWkf6U6EkDc4LLPb8aaLKj1ToPB9bnxcRcgKq3rqvVnQaV5d0IGPK \
  gQXsUcDLjQJyubxdg0ZpmjBM+78EMt04laj8WCDVoViLpuWISMVK19AWCHc3nY/i \
  XG+mjTWPhSKfaiUhpHp56/5i2NWhlDf8vLLPX7qOLZ9x2f3MqYvv0njoco+vcu4Y \
  zYuwPE1HhTxzAu0XsXPeHP/+PqHE3yk4N8RTO72hCQKBgQDv94VQ+P4BquWDc9QN \
  l70gFZQZm+ivG2kgigqZJXCu3OIV0dQDEO3ZHxJ3YR2QZFrM22ttNIfKk42fwNbZ \
  VdBHrgm1LSdPervmx27nq1UU00v/rbJJxmoWwETQbMlfACoJj3jo4EFOtI4tTFWJ \
  4BIqJTJVSI8F8Q9PYfPSckzm3QKBgQC6T8GNNET+b3R+SSqNApALZaVbqO0LAEle \
  jgwS7orKqWGl+HAXMB94EXj2ZhPjGqBtCMQRHHU7uUf+afhiniIvGxe1ddzvrFE/ \
  ILIkxbUQmfB8fSmXdyOm7U9cMtzNpSHG1Awq3lTfHfy8ZS0b11qQgmplI4/10Wdd \
  9bNwFAV76QKBgBDTJvrFanHNfKgZz+1gDTeZq7eb8dWNM3K/mvyf3mW0QPnMq3PH \
  lRWbEx1hpsP/9UnVvJN8kmTGsbBYwfedB6xu7GlSkCYHcfM9Wm5N2fpK0lJL6Gs5 \
  yShtNKX0aq4JgekHsS+Kwal2CV3tszWmiz9/Oic2niiJfUxQjtrbfr7VAoGAe+/K \
  RXBb5RWnXMq3L45g2/QGB+9boFHUfL3pcj6UvTPn7UxS5Fny1SBqYx6MZCq2RVHr \
  e6Z+pfge2DMONCwVeViAcQmyqwzqDyBk4OlUBXMh8u4f2M48PTLn8+Ex2OrciTNN \
  1MaJltKP6ZM0aqzbZf4bYKRDg7aFGI/1ib0H2OECgYEAkccjJocazmvfJpjjHTex \
  Z9ewQsAsZXyyzBp9EY3UMu/a5DWCIaXwlZRr0gVz3FWMx+Fvkae/wahiY4JQpce+ \
  EWqV+sqo5DbfTzoQhczC7cXam1cqPalb9q2CI8WeqBPwkxhbFk6KrNwdEhWUN9om \
  yOcczfUEFZz+yhWqFHKsiyc= \
  -----END PRIVATE KEY-----
ssl.keystore.type=PEM
ssl.truststore.certificates=-----BEGIN CERTIFICATE----- \
  MIICzzCCAbegAwIBAgIJAL+3xx6or1QTMA0GCSqGSIb3DQEBBQUAMCcxEjAQBgNV \
  BAMMCWxvY2FsaG9zdDERMA8GA1UECgwIQSBzZXJ2ZXIwHhcNMjUwMjE4MTAwMTU4 \
  WhcNMjUwMzIwMTAwMTU4WjAnMRIwEAYDVQQDDAlsb2NhbGhvc3QxETAPBgNVBAoM \
  CEEgc2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArqSZrPC6 \
  0D09iIGqPlNl/W6u+5ATkRLFEQY+k+JG2qIGmjmGBjbsR931RUK/lI8BJZosdIBl \
  s12fxcs7oF2IrRYGNQvPBUJArVrtmt0zVeZH+4IPFMtCJ2XdH01DNEuvnBSemy6O \
  QP0wE6tewnZh59whBswMG8YOcYaTkRmKpepYzrON8NbfMCnqLefo7rLLNJmZZR82 \
  ugJg+RVTT/riSj3rYpcYPZr4TDTzBvkFD24blXHv75HLWBcOarUGMnPDcSrAZGEu \
  Gh4m/VKsgxlbG0N/5UVt4oApADvT17rzPKfZVBVVU3RiEk03cOu9bf8M9Nh5/Rzr \
  a2mF6cyuwTtOJQIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCIjsPCu6HW/eH6YgNb \
  5Pmfuc5kp4R/kJQD9puE5ipuyfGZ1MoVIqVu+eD2UHkcDTuyhhrLdgHgfi2nKEf6 \
  0eDUXMMlFQPonURAZhj+74yU5vDqcHHqpZVwTIyHEifsfG+GSVDkb+C1E+ItNjxD \
  DjJN76+pPxznFi68Tg1v0/K+mzL0o0V8T79HDMk4MVxIOC3610aoBChbGaOUX8U6 \
  6mCQjwZfk6JJujunaZ8882sf+GAx+AjA1rR3dWjX6CmCjugOdpIn6bpopHpD+ruI \
  fJmhCUja0K8malu4AZvqD53yu66TXD20Q5LzHJCIGTYnbR6QaFCjsOEk+6df4H2U \
  yMKo \
  -----END CERTIFICATE-----
ssl.truststore.type=PEM

############################# Log Basics #############################

# A comma separated list of directories under which to store log files
log.dirs={{ base_store_path }}/data

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num.partitions=1

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
num.recovery.threads.per.data.dir=1

############################# Internal Topic Settings  #############################
# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

############################# Log Flush Policy #############################

# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.

# The number of messages to accept before forcing a flush of data to disk
#log.flush.interval.messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
#log.flush.interval.ms=1000

############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion due to age
log.retention.hours=168

# A size-based retention policy for logs. Segments are pruned from the log unless the remaining
# segments drop below log.retention.bytes. Functions independently of log.retention.hours.
#log.retention.bytes=1073741824

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
log.segment.bytes=1073741824

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
log.retention.check.interval.ms=300000

############################# Settings for AutoMQ for Kafka #############################
# Whether to enable store data in elastic stream layer
elasticstream.enable=true

# The data buckets
# the full url format for s3 is 0@s3://$bucket?region=$region[&endpoint=$endpoint][&pathStyle=$enablePathStyle][&authType=$authType][&accessKey=$accessKey][&secretKey=$secretKey]"
# - pathStyle: true|false. The object storage access path style. When using MinIO, it should be set to true."
# - authType: instance|static.
#  - When set to instance, it will use instance profile to auth.
#  - When set to static, it will get accessKey and secretKey from the url or from system environment KAFKA_S3_ACCESS_KEY/KAFKA_S3_SECRET_KEY."
s3.data.buckets=0@s3://{{ s3_bucket }}?region={{ s3_region }}&endpoint={{ s3_endpoint }}
# The ops buckets
# s3.ops.buckets=0@s3://{{ s3_bucket }}?region={{ s3_region }}&endpoint={{ s3_endpoint }}

# The file path of delta WAL in block device
s3.wal.path=0@file://{{ kafka_wal_path }}?capacity=4294967296&iops={{ kafka_wal_iops }}

# The maximum size of WAL cache can use, default 2GB
s3.wal.cache.size=2147483648

# The batched size of delta WAL before being uploaded to S3, default 500MB
s3.wal.upload.threshold=536870912

# The maximum size of block cache the broker can use to cache data read from S3, default 1GB
s3.block.cache.size=1073741824

# The baseline network bandwidth of the broker in bytes/s, default 100MB/s. This is used to throttle the network usage during compaction
# and catch up read
s3.network.baseline.bandwidth={{ ec2_network_bandwidth }}

# The S3 stream memory allocator policy, supported value: POOLED_HEAP, POOLED_DIRECT, default POOLED_HEAP
s3.stream.allocator.policy=POOLED_DIRECT

############################# Settings for metrics #############################
# See kafka.automq.AutoMQConfig.S3_TELEMETRY_METRICS_EXPORTER_URI_DOC for the full format of the URI
s3.telemetry.metrics.exporter.uri=otlp://?endpoint=http://{{ telemetry_ip }}:4317&protocol=grpc
s3.telemetry.metrics.level=INFO
s3.telemetry.exporter.report.interval.ms=5000

############################# Settings for Auto Balancer #############################
# The metric reporter to collect and report metrics for Auto Balancer
metric.reporters=kafka.autobalancer.metricsreporter.AutoBalancerMetricsReporter

############################# Settings of Controller for Auto Balancer #############################
# Whether to enabled Auto Balancer in controller, default false
# autobalancer.controller.enable=false

# The topics to be excluded from balancing
#autobalancer.controller.exclude.topics=topic-a,topic-b,topic-c

# The broker ids to be excluded from balancing
#autobalancer.controller.exclude.broker.ids=0,1,2

############################# Settings for benchmark #############################

# added settings from confluent benchmark
num.replica.fetchers=8
message.max.bytes=10485760
replica.fetch.max.bytes=10485760

# added for benchmark
socket.receive.buffer.bytes=1048576
socket.send.buffer.bytes=1048576
